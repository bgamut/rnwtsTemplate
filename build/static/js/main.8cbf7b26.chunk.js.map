{"version":3,"sources":["components/Welcome/index.tsx","components/Instructions/index.tsx","screens/App/index.tsx","utils/Config/index.tsx","index.tsx"],"names":["styles","StyleSheet","create","button","flex","paddingVertical","buttons","flexDirection","greeting","color","fontWeight","root","alignItems","alignSelf","Welcome","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onIncrement","setState","enthusiasmLevel","state","onDecrement","getExclamationMarks","numChars","Array","join","inherits","createClass","key","value","react","View","style","Text","name","Button","title","onPress","accessibilityLabel","React","instructions","marginBottom","textAlign","welcome","fontSize","margin","Instructions","_ref","container","backgroundColor","justifyContent","App","Platform","select","android","ios","SafeAreaView","Instructions_Instructions","Welcome_Welcome","Config","web","AppRegistry","registerComponent","OS","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.8cbf7b26.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    paddingVertical: 0\n  },\n  buttons: {\n    flexDirection: \"row\"\n  },\n  greeting: {\n    color: \"#999\",\n    fontWeight: \"bold\"\n  },\n  root: {\n    alignItems: \"center\",\n    alignSelf: \"center\"\n  }\n});\n\ninterface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\nexport interface State {\n  enthusiasmLevel: number;\n}\n\nexport class Welcome extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      enthusiasmLevel: props.enthusiasmLevel || 1\n    };\n  }\n\n  public render() {\n    return (\n      <View style={styles.root}>\n        <Text style={styles.greeting}>\n          Hello{\" \"}\n          {this.props.name +\n            this.getExclamationMarks(this.state.enthusiasmLevel)}\n        </Text>\n\n        <View style={styles.buttons}>\n          <View style={styles.button}>\n            <Button\n              title=\"-\"\n              onPress={this.onDecrement}\n              accessibilityLabel=\"decrement\"\n            />\n          </View>\n\n          <View style={styles.button}>\n            <Button\n              title=\"+\"\n              onPress={this.onIncrement}\n              accessibilityLabel=\"increment\"\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  private onIncrement = () =>\n    this.setState({ enthusiasmLevel: this.state.enthusiasmLevel + 1 });\n\n  private onDecrement = () =>\n    this.setState({\n      enthusiasmLevel:\n        this.state.enthusiasmLevel - 1 > 0 ? this.state.enthusiasmLevel - 1 : 0\n    });\n\n  private getExclamationMarks = (numChars: number) =>\n    Array(numChars + 1).join(\"!\");\n}\n","import * as React from \"react\";\nimport { StyleSheet, Text } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  instructions: {\n    color: \"#333333\",\n    marginBottom: 5,\n    textAlign: \"center\"\n  },\n  welcome: {\n    fontSize: 20,\n    margin: 10,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  instructions: string;\n}\n\nexport const Instructions = ({ instructions }: Props) => (\n  <>\n    <Text style={styles.welcome}>Welcome to React Native!</Text>\n    <Text style={styles.instructions}>\n      To get started, edit ./src/containers/App/index.tsx\n    </Text>\n    <Text style={styles.instructions}>{instructions}</Text>\n  </>\n);\n","import * as React from \"react\";\nimport { Platform, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Instructions, Welcome } from \"../../components\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\",\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\n\nexport const App = () => {\n  const instructions = Platform.select({\n    android:\n      \"Double tap R on your keyboard to reload,\\nShake or press menu button for dev menu\",\n    ios: \"Press Cmd+R to reload,\\nCmd+D or shake for dev menu\"\n  });\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Instructions instructions={instructions} />\n      <Welcome name=\"Human\" enthusiasmLevel={1} />\n    </SafeAreaView>\n  );\n};\n","interface Config {\n  app: {\n    name: string;\n  };\n  os: {\n    ios: string;\n    android: string;\n    web: string;\n  };\n  web: {\n    root: string;\n  };\n}\n\nexport const Config: Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    android: \"android\",\n    ios: \"ios\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","// app entry\nimport { AppRegistry, Platform } from \"react-native\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\n// register the app\nAppRegistry.registerComponent(Config.app.name, () => App);\n\n// register the web\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}